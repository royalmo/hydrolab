{% extends 'base/logged_in.html.j2' %}

{% block body %}

<section class="py-2 disabled-input-gray">

  <div class="w-full bg-slate-400 bg-opacity-90 lg:w-8/12 mx-auto mt-6 max-w-[1250px]">
    <div class="relative flex flex-col min-w-0 break-words w-full mb-6 shadow-lg rounded-lg bg-blueGray-100 border-0">
      <form id="sensor_form" method="post" action="">
        <div class="flex flex-wrap items-center justify-between rounded-t bg-white mb-0 px-6 py-6">
          {% if new %}
          <h6 class="text-blueGray-700 text-xl font-bold">{{ _('Add New Sensor') }}</h6>
          {% else %}
          <h6 class="text-blueGray-700 text-xl font-bold">{{ _('Modify Sensor') }}</h6>
          {% endif %}

          <div>
            {{ sensor.submit(class_="relative text-white bg-blue-700 hover:bg-blue-800 focus:ring-4 focus:ring-blue-300
            font-medium rounded-lg text-sm px-5 py-1.5 focus:outline-none") }}

            {% if not new %}
            <a onclick="return confirm('{{ _('Do you really wish to remove this sensor?') }}');"
              href="{{ url_for('main.sensors.remove', id=id) }}" class="relative text-white bg-red-700 hover:bg-red-800 focus:ring-4 focus:ring-red-300
                  font-medium rounded-lg text-sm px-5 py-1.5 focus:outline-none">{{ _('Remove Sensor') }}
            </a>
            {% endif %}
          </div>
        </div>
    </div>
    <div class="flex-auto px-4 lg:px-10 py-10 pt-0">
      <h6 class="text-blueGray-400 text-sm mt-3 mb-6 font-bold uppercase">
        {{ _('Basic Information') }}
      </h6>
      <div class="flex flex-wrap">
        <div class="w-full lg:w-6/12 px-4">
          <div class="relative w-full mb-3">
            <label for="name" class="block uppercase text-blueGray-600 text-xs font-bold mb-2" htmlfor="grid-password">
              {{ _('Sensor Name') }}
            </label>
            {{ sensor.name(class_="border-0 px-3 py-3 placeholder-blueGray-300 text-blueGray-600
            bg-white rounded
            text-sm shadow focus:outline-none focus:ring w-full ease-linear transition-all duration-150")}}
          </div>
        </div>
 
        <div class="w-full lg:w-12/12 px-4">
          <div class="relative w-full mb-3">
            <label for="description" class="block uppercase text-blueGray-600 text-xs font-bold mb-2"
              htmlfor="grid-password">
              {{ _('Sensor Description') }}
            </label>
            {{ sensor.description(class_="border-0 px-3 py-3 placeholder-blueGray-300
            text-blueGray-600
            bg-white rounded text-sm shadow focus:outline-none focus:ring w-full ease-linear transition-all
            duration-150")}}
          </div>
        </div>

        <div class="w-full lg:w-12/12 px-4">
          <div class="relative w-full mb-3">
            <label for="eui" class="block uppercase text-blueGray-600 text-xs font-bold mb-2"
              htmlfor="grid-password">
              {{ _('Sensor TTN ID') }}
            </label>
            {{ sensor.eui(class_="border-0 px-3 py-3 placeholder-blueGray-300 text-blueGray-600
            bg-white rounded text-sm shadow focus:outline-none focus:ring w-full ease-linear transition-all
            duration-150")}}
          </div>
        </div>

      </div>
      <h6 class="text-blueGray-400 text-sm mt-3 mb-6 font-bold uppercase">
        {{ _('Sensor Parameters') }}
      </h6>
      <div class="flex flex-wrap">

        <div class="w-full lg:w-12/12 px-4">
          <div class="relative w-full mb-3">
            <label for="watering_time" class="block uppercase text-blueGray-600 text-xs font-bold mb-2"
              htmlfor="grid-password">
              {{ _('Watering Time (seconds)') }}
            </label>
            {{ sensor.watering_time(class_="border-0 px-3 py-3 placeholder-blueGray-300
            text-blueGray-600
            bg-white rounded text-sm shadow focus:outline-none focus:ring w-full ease-linear transition-all
            duration-150")}}
          </div>
        </div>

        <div class="w-full lg:w-12/12 px-4">
          <div class="relative w-full mb-3">
            <label for="watering_threshold" class="block uppercase text-blueGray-600 text-xs font-bold mb-2"
              htmlfor="grid-password">
              {{ _('Watering Threshold') }}
            </label>
            {{ sensor.watering_threshold(class_="border-0 px-3 py-3 placeholder-blueGray-300
            text-blueGray-600
            bg-white rounded text-sm shadow focus:outline-none focus:ring w-full ease-linear transition-all
            duration-150")}}
          </div>
        </div>

        <div class="w-full lg:w-12/12 px-4">
          <div class="relative w-full mb-3">
            <label for="time_between_waterings" class="block uppercase text-blueGray-600 text-xs font-bold mb-2"
              htmlfor="grid-password">
              {{ _('Minutes Between Waterings') }}
            </label>
            {{ sensor.time_between_waterings(class_="border-0 px-3 py-3 placeholder-blueGray-300
            text-blueGray-600
            bg-white rounded text-sm shadow focus:outline-none focus:ring w-full ease-linear transition-all
            duration-150")}}
          </div>
        </div>

        <div class="w-full lg:w-12/12 px-4">
          <div class="relative w-full mb-3">
            <label for="minutes_between_uplinks" class="block uppercase text-blueGray-600 text-xs font-bold mb-2"
              htmlfor="grid-password">
              {{ _('Minutes Between Uplinks') }}
            </label>
            {{ sensor.minutes_between_uplinks(class_="border-0 px-3 py-3 placeholder-blueGray-300
            text-blueGray-600
            bg-white rounded text-sm shadow focus:outline-none focus:ring w-full ease-linear transition-all
            duration-150")}}
          </div>
        </div>
      </div>

      <hr class="mt-6 border-b-1 border-blueGray-300">
      {{ sensor.hours_range(type="hidden", id="hours_range") }}
      <!-- 24-Hour Selection Component -->
      <div class="flex-auto w-full px-4 lg:px-10 pt-0">
        <h6 class="text-blueGray-400 text-sm mt-3 mb-6 font-bold uppercase">
          {{ _('Select Hours Where watering can be done') }}
        </h6>
        <div class="flex flex-wrap w-full">
          {% if sensor.hours is defined and sensor.hours is not none %}
              {% set sensor_hours = sensor.hours %}
          {% else %}
              {% set sensor_hours = 0 %}
          {% endif %}

          {% set hours_binary = '{:024b}'.format(sensor_hours) %}

          {% for i in range(24) %}
          <div class="flex-1 min-w-[6%] lg:min-w-[2%] m-1">
            <label
              class="hour-block block select-none {% if hours_binary[i] == '1' %}selected-hour{% else %}bg-gray-200 hover:bg-gray-300{% endif %} text-center rounded-lg shadow cursor-pointer h-full">
              <input type="checkbox" name="hour-{{ i }}" class="hidden hour-checkbox" {% if hours_binary[i]=='1'
                %}checked{% endif %}>
              <span class="block py-2">{{ i }}</span>
            </label>
          </div>
          {% endfor %}
        </div>
      </div>


      <style>
        .selected-hour {
          background-color: #3182ce;
          /* Tailwind's blue-500 */
        }
        .selected-hour:hover {
          background-color: #1d4c77 !important;
        }
      </style>

      <script>
        function updateHoursRange() {
          let newValue = 0;
          const checkboxes = document.querySelectorAll('.hour-checkbox');
          checkboxes.forEach(function (checkbox, index) {
            if (checkbox.checked) {
              // Reverse the bit order here
              newValue |= (1 << (checkboxes.length - 1 - index));
            }
          });
          document.getElementById('hours_range').value = newValue;
        }

        document.querySelectorAll('.hour-checkbox').forEach(function (checkbox) {
          checkbox.addEventListener('change', function () {
            this.parentElement.classList.toggle('selected-hour', this.checked);
            updateHoursRange(); // Update the hidden input whenever a checkbox changes
          });
        });

        // Initialize hours_range on page load
        window.onload = updateHoursRange;

      </script>

      </form>
    </div>

  </div>
  </div>
</section>

{% endblock %}