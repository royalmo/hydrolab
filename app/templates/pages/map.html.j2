{% extends 'base/map_base.html.j2' %}
{% block body %}

<div id="map" class="border border-black absolute h-full w-full"></div>

<script>
    {%if center %}
    var map = L.map('map').setView({{ center }}, 15);
    {% else %}
    var map = L.map('map').setView([41.38, 2.16], 9);
    {% endif %}
    L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
        attribution: '&copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors'
    }).addTo(map);

    var bounds = new L.LatLngBounds();
    var sensorsAdded = false;

    var okIcon = new L.Icon({
        iconUrl: '{{ url_for("static", filename = "images/marker-error-0.svg") }}',
        shadowUrl: 'https://cdnjs.cloudflare.com/ajax/libs/leaflet/0.7.7/images/marker-shadow.png',
        iconSize: [80, 50],
        iconAnchor: [32, 45],
        popupAnchor: [1, -34],
        shadowSize: [95, 51]
    });


    var warningIcon = new L.Icon({
        iconUrl: '{{ url_for("static", filename = "images/marker-error-1.svg") }}',
        shadowUrl: 'https://cdnjs.cloudflare.com/ajax/libs/leaflet/0.7.7/images/marker-shadow.png',
        iconSize: [80, 50],
        iconAnchor: [32, 45],
        popupAnchor: [1, -34],
        shadowSize: [95, 51]
    });

    var errorIcon = new L.Icon({
        iconUrl: '{{ url_for("static", filename = "images/marker-error-2.svg") }}',
        shadowUrl: 'https://cdnjs.cloudflare.com/ajax/libs/leaflet/0.7.7/images/marker-shadow.png',
        iconSize: [80, 50],
        iconAnchor: [32, 45],
        popupAnchor: [1, -34],
        shadowSize: [95, 51]
    });

    let icon = null

    {% for eachsensor in sensors %}

    {% if eachsensor.location and eachsensor.location.latitude is not none and eachsensor.location.longitude is not none %}
    var sensorLocation = new L.LatLng({{ eachsensor.location.latitude }}, {{ eachsensor.location.longitude }});
    bounds.extend(sensorLocation);
    sensorsAdded = true;

    {% set last_uplink = eachsensor.get_last_uplink() %}
    var sensorPopupContent = `
                    <h2 class="mb-2"><b>{{ eachsensor.name }}</b></h2>
                    <b>{{_('Humidity:')}}</b> {{ last_uplink.humidity }}%<br>
                    <b>{{_('Temperature:')}}</b> {{ last_uplink.temperature }} Â°C<br>
                    <b>{{_('Battery:')}}</b> {{ last_uplink.battery }}%<br>
                    <b>{{_('Last Watered:')}}</b> {{ eachsensor.last_watered_at }}<br>

                    {% for error in eachsensor.parsed_errors() %}
                        <span class="text-red-600">
                            <b>{% if error[0] == 'E' %}{{_('ERROR')}}{% else %}{{_('Warning')}}{% endif %}:</b>
                            {{ error[1] }}
                        </span><br>
                    {% endfor %}

                    <div class="flex flex-row justify-center my-2">
                        <div class="bg-blue-200 text-white font-bold py-1 px-4 rounded cursor-pointer">
                            <a href="{{ url_for('.sensors.info', id=eachsensor.id) }}" target="_blank">{{_('More Info')}}</a>
                        </div>
                    </div>
                `;

    {% if eachsensor.has_an_error() %}
    icon = errorIcon;
    {% elif eachsensor.has_a_warning() %}
    icon = warningIcon;
    {% else %}
    icon = okIcon;
    {% endif %}

    L.marker(sensorLocation, { icon: icon })
        .addTo(map)
        .bindPopup(sensorPopupContent);

    {% endif %}
    {% endfor %}

    // Adjust the map view to include all sensors
    if (sensorsAdded) {
        {% if not center %}
            map.fitBounds(bounds, { padding: [50, 50] });
        {% endif %}
    } else {
        // Fallback to default view if no sensors are present
        map.setView([41.38, 2.16], 9);
    }

</script>

{% endblock %}